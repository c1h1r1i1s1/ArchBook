- name: Ensure Pictures and Wallpapers dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0755'
  loop:
    - "/home/{{ primary_user }}/Pictures"
    - "{{ wallpapers_dir }}"

- name: Copy Wallpapers folder contents
  copy:
    src: "Wallpapers/"
    dest: "{{ wallpapers_dir }}/"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0644'
  notify: Fix permissions

- name: Install change_wallpapers.sh (yours)
  copy:
    src: "change_wallpapers.sh"
    dest: "{{ wallpapers_dir }}/change_wallpapers.sh"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0755'

# Patch your script to auto-detect the Firefox profile (replaces the hard-coded line)
- name: Make Firefox profile handling robust
  become: false
  become_user: "{{ primary_user }}"
  lineinfile:
    path: "{{ wallpapers_dir }}/change_wallpapers.sh"
    regexp: '^cp\s+~/.cache/wal/firefox_content\.css\s+~/.mozilla/firefox/.+?/chrome/userContent\.css$'
    line: |
      profile_dir="$(find "$HOME/.mozilla/firefox" -maxdepth 1 -type d -name "*.default*" -o -name "*.default-esr*" | head -n1)"
      if [ -n "$profile_dir" ]; then
        mkdir -p "$profile_dir/chrome"
        cp ~/.cache/wal/firefox_content.css "$profile_dir/chrome/userContent.css"
      fi

- name: Ensure system-wide theme/icon dirs exist
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  loop:
    - /usr/share/themes
    - /usr/share/icons

- name: Stage themes/icons archive (if present)
  copy:
    src: "themes_icons.tar.zst"
    dest: "/tmp/themes_icons.tar.zst"
    mode: '0644'
  register: _archive

- name: Extract themes/icons archive (first run bootstrap)
  become: true
  when: _archive is defined and _archive is succeeded
  unarchive:
    src: "/tmp/themes_icons.tar.zst"
    dest: "/usr/share"
    remote_src: true
    creates: "/usr/share/themes/oomox-day"

- name: Ensure {{ primary_user }} owns pictures subtree
  file:
    path: "/home/{{ primary_user }}/Pictures"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    recurse: yes

- name: Ensure user systemd directory exists
  become: false
  become_user: "{{ primary_user }}"
  file:
    path: "/home/{{ primary_user }}/.config/systemd/user"
    state: directory
    mode: "0755"

- name: Install change-wallpapers.service (user)
  become: false
  become_user: "{{ primary_user }}"
  copy:
    dest: "/home/{{ primary_user }}/.config/systemd/user/change-wallpapers.service"
    mode: "0644"
    content: |
      [Unit]
      Description=Run wallpaper change script
      After=graphical-session.target

      [Service]
      Type=exec
      Environment=DISPLAY=:0
      Environment=DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/%U/bus
      ExecStart=%h/Pictures/Wallpapers/change_wallpapers.sh

      [Install]
      WantedBy=default.target

- name: Install change-wallpapers-morning.timer
  become: false
  become_user: "{{ primary_user }}"
  copy:
    dest: "/home/{{ primary_user }}/.config/systemd/user/change-wallpapers-morning.timer"
    mode: "0644"
    content: |
      [Unit]
      Description=Change wallpapers at 06:00

      [Timer]
      OnCalendar=06:00
      Persistent=true
      Unit=change-wallpapers.service

      [Install]
      WantedBy=timers.target

- name: Install change-wallpapers-evening.timer
  become: false
  become_user: "{{ primary_user }}"
  copy:
    dest: "/home/{{ primary_user }}/.config/systemd/user/change-wallpapers-evening.timer"
    mode: "0644"
    content: |
      [Unit]
      Description=Change wallpapers at 17:00

      [Timer]
      OnCalendar=17:00
      Persistent=true
      Unit=change-wallpapers.service

      [Install]
      WantedBy=timers.target

- name: Install change-wallpapers-night.timer
  become: false
  become_user: "{{ primary_user }}"
  copy:
    dest: "/home/{{ primary_user }}/.config/systemd/user/change-wallpapers-night.timer"
    mode: "0644"
    content: |
      [Unit]
      Description=Change wallpapers at 21:00

      [Timer]
      OnCalendar=21:00
      Persistent=true
      Unit=change-wallpapers.service

      [Install]
      WantedBy=timers.target

- name: Reload user systemd and enable timers
  become: false
  become_user: "{{ primary_user }}"
  shell: |
    systemctl --user daemon-reload
    systemctl --user enable --now change-wallpapers-morning.timer
    systemctl --user enable --now change-wallpapers-evening.timer
    systemctl --user enable --now change-wallpapers-night.timer